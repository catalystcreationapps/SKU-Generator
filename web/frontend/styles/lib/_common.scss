.app {
  @extend %primary;
}

body,
html {
  background: #e3e3e3;
}

.container {
  margin: 0 auto;
  position: relative;
  max-width: $l;
  width: calc(100% - 40px);

  @media #{$mq-xs} {
    width: calc(100% - 80px);
  }
}

.block {
  display: block;
}

.hidden {
  display: none;
}

.visibility-hidden {
  visibility: hidden !important;
}

.inline-block {
  display: inline-block;
}

figure.zoom {
  margin: 0;
  position: relative;
  background-position: 50% 50%;
  position: relative;
  width: 100%;
  padding-top: 49.1%;
  overflow: hidden;
  cursor: zoom-in;

  & img:hover {
    opacity: 0;
  }
  img {
    transition: opacity 0.5s;
    display: block;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
  }
}

.relative {
  position: relative;
}

.absolute {
  position: absolute;
}

/**
 * Easily allows for a DOM element
 * to comply to a distinct aspect ratio.
 *
 * Example:
 * <div class="ratio square"></div>
 */

.ratio {
  position: relative;

  &::before {
    content: "";
    display: block;
    width: 100%;
  }
}

.square::before {
  padding-top: 100%;
}

.rectangle {
  padding-bottom: calc(833 / 1250 * 100%);
}

.blurred-section {
  -webkit-filter: blur(5px);
  -moz-filter: blur(5px);
  -o-filter: blur(5px);
  -ms-filter: blur(5px);
  filter: blur(5px);
}
